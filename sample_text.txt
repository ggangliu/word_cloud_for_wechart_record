Your first contribution can be daunting. It’s a lot like walking into a room full of strangers, most of whom seem to know each other. You don’t know the inside jokes—or the outside ones, for that matter. They refer to pop culture that you’ve never heard of. You don’t know, walking up to a huddle of humans, if someone is going to step slightly to the side to let you into their conversation. Maybe they’ll give you a dirty look. They’ll tell you that you’re wearing the wrong jeans. Your eyes are the wrong color. You pronounce gif wrong.

And it’s not just making your first pull request. Even opening an issue can be intimidating. Is the thing you ran into a real problem? Maybe they’ll tell you you’re stupid because—duh—you should have frobbed the whatsit.

As the maintainer of Exercism, I’ve seen thousands of people get started in new programming languages, give and receive feedback about code, and start contributing to open source projects. Your first contribution can be scary, but with the right guidance, I’m confident you’ll love being a part of the open source community as much as I do.

Here are some resources I’ve picked out to help you choose the right first project and make impactful contributions as you grow your skills.

Start with a project you use

The best way to begin contributing is to start with open source projects you already use.

There are a few benefits to starting with a project you depend on:
•You’re more familiar with what the project does and how it works
•You’re more invested in the project’s improvements and outcomes
•You have an ongoing relationship with the project, so you’re more likely to keep coming back

Think about your favorite library, module, plugin, or tool. Look through the list of dependencies for your work projects or side projects. Find the repository and browse through the code, the documentation, and the open issues to get a feel for what that project is like.

You don’t have to go for the biggest, most impressive open source project you can think of. A smaller project can sometimes be easier to wrap your head around, and the maintainers might appreciate your contribution even more since they get fewer contributions overall.

There’s no way of knowing up front whether a project is going to accept your contribution, but there are two things you can do to increase your chances of having a good first experience.

The first is to look for signs that the project welcomes contributions, and the second is to figure out what they look for in a contribution.

Evaluate the project

You can get a pretty good gut feeling about whether or not you want to get involved by looking at two things: activity and communication style.

Take a look at the list of commits. Are there recent commits? How frequent are they? Are the commits mostly from one person or are there several people involved?

 

Now look through some issues. Start with the open ones. How many are there? Are there any new ones? Are there very old ones? Do they have responses from maintainers? Are there any lively discussions? Click through to the closed issues. Did they close anything recently?

Then do the same for pull requests.

This is not an exact science, and you’re not looking for any specific numbers. If there’s not a lot of activity, it might still be a great project to contribute to. It might just be a mature, stable project that doesn’t change a lot. But if there are a lot of issues and pull requests that have been open for a long time without a response from maintainers, that can be a red flag.

Next, look at the conversations in both open and closed issues and pull requests. Sort by “most commented”. Get a feel for how people communicate. Are the conversations friendly? Do they handle disagreements respectfully? Do the maintainers show appreciation for contributions?

Some maintainers make sure new contributors feel welcome and appreciated with friendly messages or emojis.

Take time to read through old issues or mailing list archives, lurk on their Slack or IRC channel if they have one, and gather information about how the project works. Get a good feel for the project’s community and whether you’ll enjoy spending time with the people involved.
